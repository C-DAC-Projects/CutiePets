// <auto-generated />
using System;
using Admin_Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Admin_Backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("Admin_Backend.Models.OtpRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ExpiryTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("OtpCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("OtpRequests");
                });

            modelBuilder.Entity("Admin_Backend.Models.breed", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("pet_type_id")
                        .HasColumnType("int");

                    b.HasKey("id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "pet_type_id" }, "FKfm2ur16u4v62csva1tphmtnbh");

                    b.ToTable("breeds");
                });

            modelBuilder.Entity("Admin_Backend.Models.pet", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("age")
                        .HasColumnType("int");

                    b.Property<ulong?>("available")
                        .HasColumnType("bit(1)");

                    b.Property<int?>("breed_id")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("gender")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<double?>("price")
                        .HasColumnType("double");

                    b.Property<DateTime?>("submitted_at")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)");

                    b.HasKey("id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "breed_id" }, "FKr2wnqcmtrr16oaipocajcdn7w");

                    b.ToTable("pets");
                });

            modelBuilder.Entity("Admin_Backend.Models.pet_image", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("image_url")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<ulong?>("is_primary")
                        .HasColumnType("bit(1)");

                    b.Property<int?>("pet_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("uploaded_at")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)");

                    b.HasKey("id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "pet_id" }, "FKauwhaty3q9lfuoyy6018bs17n");

                    b.ToTable("pet_images");
                });

            modelBuilder.Entity("Admin_Backend.Models.pet_type", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("id")
                        .HasName("PRIMARY");

                    b.ToTable("pet_types");
                });

            modelBuilder.Entity("Admin_Backend.Models.product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<ulong?>("available")
                        .HasColumnType("bit(1)");

                    b.Property<int?>("category_id")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("pet_type_id")
                        .HasColumnType("int");

                    b.Property<double?>("price")
                        .HasColumnType("double");

                    b.Property<int?>("stock_quantity")
                        .HasColumnType("int");

                    b.HasKey("id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "category_id" }, "FK6t5dtw6tyo83ywljwohuc6g7k");

                    b.HasIndex(new[] { "pet_type_id" }, "FKifim4ev03kpvily1m6k2eib9p");

                    b.ToTable("products");
                });

            modelBuilder.Entity("Admin_Backend.Models.product_category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("id")
                        .HasName("PRIMARY");

                    b.ToTable("product_categories");
                });

            modelBuilder.Entity("Admin_Backend.Models.product_image", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("image_url")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<ulong?>("is_primary")
                        .HasColumnType("bit(1)");

                    b.Property<int?>("product_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("uploaded_at")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)");

                    b.HasKey("id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "product_id" }, "FKqnq71xsohugpqwf3c9gxmsuy");

                    b.ToTable("product_images");
                });

            modelBuilder.Entity("Admin_Backend.Models.user", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("city")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("profile_image")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("'ROLE_USER'");

                    b.Property<string>("state")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("street")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("zip")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "email" }, "UK6dotkott2kjsp8vw4d0m25fb7")
                        .IsUnique();

                    b.ToTable("users");
                });

            modelBuilder.Entity("Admin_Backend.Models.breed", b =>
                {
                    b.HasOne("Admin_Backend.Models.pet_type", "pet_type")
                        .WithMany("breeds")
                        .HasForeignKey("pet_type_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FKfm2ur16u4v62csva1tphmtnbh");

                    b.Navigation("pet_type");
                });

            modelBuilder.Entity("Admin_Backend.Models.pet", b =>
                {
                    b.HasOne("Admin_Backend.Models.breed", "breed")
                        .WithMany("pets")
                        .HasForeignKey("breed_id")
                        .HasConstraintName("FKr2wnqcmtrr16oaipocajcdn7w");

                    b.Navigation("breed");
                });

            modelBuilder.Entity("Admin_Backend.Models.pet_image", b =>
                {
                    b.HasOne("Admin_Backend.Models.pet", "pet")
                        .WithMany("pet_images")
                        .HasForeignKey("pet_id")
                        .HasConstraintName("FKauwhaty3q9lfuoyy6018bs17n");

                    b.Navigation("pet");
                });

            modelBuilder.Entity("Admin_Backend.Models.product", b =>
                {
                    b.HasOne("Admin_Backend.Models.product_category", "category")
                        .WithMany("products")
                        .HasForeignKey("category_id")
                        .HasConstraintName("FK6t5dtw6tyo83ywljwohuc6g7k");

                    b.HasOne("Admin_Backend.Models.pet_type", "pet_type")
                        .WithMany("products")
                        .HasForeignKey("pet_type_id")
                        .HasConstraintName("FKifim4ev03kpvily1m6k2eib9p");

                    b.Navigation("category");

                    b.Navigation("pet_type");
                });

            modelBuilder.Entity("Admin_Backend.Models.product_image", b =>
                {
                    b.HasOne("Admin_Backend.Models.product", "product")
                        .WithMany("product_images")
                        .HasForeignKey("product_id")
                        .HasConstraintName("FKqnq71xsohugpqwf3c9gxmsuy");

                    b.Navigation("product");
                });

            modelBuilder.Entity("Admin_Backend.Models.breed", b =>
                {
                    b.Navigation("pets");
                });

            modelBuilder.Entity("Admin_Backend.Models.pet", b =>
                {
                    b.Navigation("pet_images");
                });

            modelBuilder.Entity("Admin_Backend.Models.pet_type", b =>
                {
                    b.Navigation("breeds");

                    b.Navigation("products");
                });

            modelBuilder.Entity("Admin_Backend.Models.product", b =>
                {
                    b.Navigation("product_images");
                });

            modelBuilder.Entity("Admin_Backend.Models.product_category", b =>
                {
                    b.Navigation("products");
                });
#pragma warning restore 612, 618
        }
    }
}
